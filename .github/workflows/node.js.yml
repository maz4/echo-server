# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: echo-server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build, Push and Deploy to Heroku
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    - run: yarn install --cache-folder .yarn
    - run: yarn run build
    - run: yarn run test:coverage

    # - name: Build, Push and Deploy to Heroku # set whatever name you want to this step
    #   id: heroku
    #   uses: jctaveras/heroku-deploy@v2.1.3 # use the latest version of the action
    #   with:
    #     email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
    #     api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
    #     app_name: ${{ secrets.HEROKU_APP_NAME }} # you aplication name
    #     dockerfile_path: '' # set the path to the folder where the Dockerfile is located
    #     options: '' # Docker Build Options
    #     formation: '' # Docker Dyno Formation. By default is web

    - name: Build, Push and Release a Docker container to Heroku # Your custom step name
      uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
      with:
        # Below you must provide variables for your Heroku app.

        # The email address associated with your Heroku account.
        # If you don't want to use repository secrets (which is recommended) you can do:
        # email: my.email@example.com
        email: ${{ secrets.HEROKU_EMAIL }}
        
        # Heroku API key associated with provided user's email.
        # Api Key is available under your Heroku account settings.
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        
        # Name of the heroku application to which the build is to be sent.
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

        # (Optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
        dockerfile_directory: ./

        # (Optional, default: "Dockerfile")
        # Dockerfile name.
        dockerfile_name: Dockerfile

        # (Optional, default: "")
        # Additional options of docker build command.
        docker_options: "--no-cache"

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web